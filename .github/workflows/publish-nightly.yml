name: Publish Nightly

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build Dotnet
      run: dotnet build --no-restore --warnaserror
    - name: "JPRM: Build"
      id: jrpm
      uses: oddstr13/jellyfin-plugin-repository-manager@master
      with:
        verbosity: debug
        path: .
        dotnet-target: "net6.0"
        output: _dist
    - run: mkdir -p _repo && cp manifest.json _repo/
    - name: List Output Artifact
      run: 'ls -la _dist _repo'    

    - name: Publish output artifacts
      id: publish-assets
      uses: softprops/action-gh-release@v1
      with:
          fail_on_unmatched_files: true
          tag_name: nightly
          files: |
            _repo/sso-authentication/*
          body: |
            Nightly build
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: "JPRM: Repo"
      run: 'python3 /home/runner/work/_actions/oddstr13/jellyfin-plugin-repository-manager/master/jprm/__init__.py repo add --url="${{ fromJSON(steps.publish-assets.outputs.assets)[1].browser_download_url }}" _repo _dist/*.zip'
    - name: List Output Artifact
      run: 'ls -la _dist _repo'     
    - name: Copy manifest to output
      run: cp _repo/manifest.json _dist/
    - name: Publish output artifacts
      uses: softprops/action-gh-release@v1
      with:
          fail_on_unmatched_files: true
          tag_name: nightly
          files: |
            _repo/*.json
          body: |
            Nightly build
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}